<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Http请求的参数的提交方式及SpringBoot接收]]></title>
    <url>%2F2018%2F12%2F03%2F7%2F</url>
    <content type="text"><![CDATA[Http请求的几种类型Get向特定的资源发出请求,具备幂等性 Post向指定的资源提交数据进行处理请求,数据被包含在请求体中 PutHttp 1.1 开始支持向指定资源位置上传其最新内容 DeleteHttp 1.1 开始支持请求服务器删除Request-URI所标识的资源 HeadHttp 1.1 开始支持向服务器索要与Get请求一致的响应,但不会返回响应体,仅返回响应消息头中的源信息 OptionsHttp 1.1 开始支持返回服务器针对特定资源所支持的Http请求方法 Http请求参数的提交方式Get请求无消息体,数据只可放在在url中,只能传输少量数据(1024字节客户端指定)在SpringBoot可用 @RequestParam指定属性去取,若不指定也会默认映射;也可用实体接收 Post有消息体,数据可放在消息体中,可传输大量数据传输内容类型有很多种,如Xml,JSON,Multipartfile SpringBoot的接收方式@RequestParamUrl中?后跟的参数以及form-data中提交的参数 @PathVarableUrl路径中的参数 @RequestBody仅Post有效,将post消息体中的数据转换成一个指定的实例 @ReqeustAttributeRequest中Attribute对应的属性 实体接收将参数自动映射成实体对象 其他暂时没有找到如何在post中如何接收application/x-www-form-urlencoded]]></content>
      <categories>
        <category>tec</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[带宽检测之Iperf]]></title>
    <url>%2F2018%2F11%2F14%2F6%2F</url>
    <content type="text"></content>
      <categories>
        <category>tec, tool</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo的高阶使用之网站收录及周边]]></title>
    <url>%2F2018%2F11%2F13%2F5%2F</url>
    <content type="text"><![CDATA[以下基于hexo version 3.8.0 网站收录百度 注册百度账号,打开站点管理 添加网站 -&gt; 站点属性 -&gt; 验证网站;验证时选HTML标签验证;只需修改主题配置文件,将baidu_site_verification: 百度code 即可 站点地图插件 npm install hexo-generator-baidu-sitemap –savehexo clean -&gt; hexo generator -&gt; hexo deploy -&gt; 提交站点 谷歌 注册google账号,打开Google Webmaster tools 添加网站 -&gt; HTML标签验证 -&gt; 完成只需修改主题配置文件,将google_site_verification: 谷歌code 即可 站点地图npm install hexo-generator-sitemap –save将主题配置文件中的baidu_push设为truehexo clean -&gt; hexo generator -&gt; hexo deploy -&gt; 提交站点 网站优化速度慢 字体导致将主题配置文件下的font -&gt; host改为//fonts.lug.ustc.edu.cn 文章目录错乱next自带目录解析工具要求的标题格式12345H2 H3H2 H3 H4 如果从H2跳到H4,会导致解析错乱 Hexo项目托管到Github 建库 git commit -&gt; git push git checkout -&gt; git fetch -&gt; git merge 对于子仓库(如themes/next),在提交的手要删除其中的.git,并将其cache删除,方能提交]]></content>
      <categories>
        <category>tec, tool</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo的高阶使用之搜索,统计,评论]]></title>
    <url>%2F2018%2F11%2F13%2F4%2F</url>
    <content type="text"><![CDATA[以下基于hexo version 3.8.0 搜索 – 本地安装插件npm install hexo-generator-searchdb –save 修改站点配置文件 _config.yml添加12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件 _config.yml修改12local_search: enable: true 统计 – 百度统计准备 注册百度统计账号 新增自有网站 – 域名指定 获取统计代码 – 唯一id123456789&lt;script&gt;var _hmt = _hmt || [];(function() &#123; var hm = document.createElement(&quot;script&quot;); hm.src = &quot;https://hm.baidu.com/hm.js?唯一id&quot;; var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(hm, s);&#125;)();&lt;/script&gt; 修改主题配置文件 _config.yml12# Baidu Analytics IDbaidu_analytics: $&#123;唯一id&#125; 检查是否成功百度统计 -&gt; 管理 -&gt; 对应网站代码状态检查 评论 – Gitalk修改主题配置 _config.yml新增12345678gitalk: enable: true githubID: github帐号 repo: 仓库名称 ClientID: Client ID ClientSecret: Client Secret adminUser: github帐号 //指定可初始化评论账户 distractionFreeMode: true 新增gitalk.swig 到主题下的/layout/_third-party/comments/12345678910111213141516&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt; &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;, clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;, repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;, owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;, admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;], id: location.pathname, distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos; &#125;) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;&#123;% endif %&#125; 修改主题下的/layout/_partials/comments.swig添加12&#123;% elseif theme.gitalk.enable %&#125; &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt; 修改主题下的/layout/_third-party/comments/index.swig添加1&#123;% include &apos;gitalk.swig&apos; %&#125; 新增gitment.styl到主题下的/source/css/_common/components/third-party/1234.gt-header a, .gt-comments a, .gt-popup a border-bottom: none;.gt-container .gt-popup .gt-action.is--active:before top: 0.7em; 修改主题下的/source/css/_common/components/third-party/third-party.styl添加1@import &quot;gitalk&quot;; 优化 优化速度将gitalk.swig中css和js下载到本地;放到主题下的/source/lib/gitalk下;对应的gitalk.swig如下 12345678910111213141516&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125; &lt;link rel=&quot;stylesheet&quot; href=&quot;lib/gitalk/gitalk.css&quot;&gt; &lt;script src=&quot;lib/gitalk/gitalk.min.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; var gitalk = new Gitalk(&#123; clientID: &apos;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&apos;, clientSecret: &apos;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&apos;, repo: &apos;&#123;&#123; theme.gitalk.repo &#125;&#125;&apos;, owner: &apos;&#123;&#123; theme.gitalk.githubID &#125;&#125;&apos;, admin: [&apos;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&apos;], id: location.pathname, distractionFreeMode: &apos;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&apos; &#125;) gitalk.render(&apos;gitalk-container&apos;) &lt;/script&gt;&#123;% endif %&#125; 特定文章禁用评论在markdown的头中加入comments:false 更多]]></content>
      <categories>
        <category>tec, tool</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[内网穿透]]></title>
    <url>%2F2018%2F11%2F12%2F3%2F</url>
    <content type="text"><![CDATA[选择 Ngrok和FrpNgrokhttps://github.com/inconshreveable/ngrok Go语言实现 Ngrok1开源,Ngrok2闭源 存在bug,且不再维护 Frp(Fast Reverse Proxy)https://github.com/fatedier/frp 完全开源 功能更丰富 部署Frp下载Centoscd /optwget https://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_linux_amd64.tar.gztar -zxvf frp_0.21.0_linux_amd64.tar.gzWindowshttps://github.com/fatedier/frp/releases/download/v0.21.0/frp_0.21.0_windows_amd64.zip 配置服务端123456[common]bind_port = 7000vhost_http_port = 8080log_file = ./frps.logtoken = $&#123;u.token&#125;subdomain_host = $&#123;u.domain&#125; 客户端123456789101112131415[common]server_addr = $&#123;u.server.ip&#125;server_port = 7000token = $&#123;u.token&#125;[ssh000]type = tcplocal_ip = 127.0.0.1local_port = 22remote_port = 6000[web000]type = httplocal_port = 80subdomain = $&#123;u.subdomain&#125; 启动服务端./frps -c frps.ini &amp;客户端./frpc -c frpc.ini &amp; 注意 多个客户端,ssh000,web000,remote_port都不能重复 客户端与服务端时间最多不可超过15分钟 防火墙 开机自启服务端vi /usr/lib/systemd/system/frps.service1234567891011[Unit]Description=frps daemonAfter=syslog.target network.targetWants=network.target[Service]Type=simpleExecStart=$&#123;frps_full_path&#125; -c $&#123;frps.ini_full_path&#125;Restart=alwaysRestartSec=1min[Install]WantedBy=multi-user.target service frps start/status/stopsystemctl enable frpssystemctl restart frps 客户端vi /usr/lib/systemd/system/frpc.service1234567891011[Unit]Description=frpc daemonAfter=syslog.target network.targetWants=network.target[Service]Type=simpleExecStart=$&#123;frpc_full_path&#125; -c $&#123;frpc.ini_full_path&#125;Restart=alwaysRestartSec=1min[Install]WantedBy=multi-user.target service frpc start/status/stopsystemctl enable frpcsystemctl restart frpc]]></content>
      <categories>
        <category>tec, tool</category>
      </categories>
      <tags>
        <tag>vpn</tag>
      </tags>
  </entry>
</search>
